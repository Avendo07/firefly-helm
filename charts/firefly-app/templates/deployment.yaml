apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "..fullname" . }}
  labels:
    {{- include "..labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "..selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "..labels" . | nindent 8 }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
              protocol: TCP
          # livenessProbe:
          #   httpGet:
          #     path: /health
          #     port: {{ .Values.service.port }}
          # readinessProbe:
          #   httpGet:
          #     path: /health
          #     port: {{ .Values.service.port }}
          # startupProbe:
          #   httpGet:
          #     path: /health
          #     port: {{ .Values.service.port }}
          #   # Give the app 30 x 10 = 300s to startup
          #   failureThreshold: 30
          #   periodSeconds: 10
          envFrom:
            - secretRef:
                name: {{ .Chart.Name }}-app-key
            - secretRef:
                name: {{ .Chart.Name }}-secret
            - configMapRef:
                name: {{ .Chart.Name }}-config
          volumeMounts:
            - name: upload
              mountPath: "/var/www/html/storage/upload"
      volumes:
        - name: upload
          persistentVolumeClaim:
            claimName: {{ .Chart.Name }}-pv-claim
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
